cutoff = c(0.929, 0.907, 0.901, 0.896, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.906, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.904, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.901, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.900, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
##-------------------------------
## Case 3: theta_h = 0.2
##-------------------------------
theta.h = 0.2
scenarios = matrix(c(0.2,  0.2,
0.2,  0.3,
0.21, 0.31,
0.18, 0.28,
0.3,  0.3,
0.35, 0.35,
0.10, 0.20,
0.07, 0.17), ncol = 2, byrow = T)
# scenarios = matrix(c(0.2, 0.2), ncol = 2)
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.900, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
res_3 <- cbind(scenarios,res_3)
write.csv(res_3, file = 'Res_supp/res_binary_OC_case_3.csv')
n_h
n_c   <- c(150, 150, 125)
n_t   <- c(300, 300, 250)
n_h   <- c(300, 300, 250)
##-------------------------------
## Case 3: theta_h = 0.2
##-------------------------------
theta.h = 0.2
scenarios = matrix(c(0.2,  0.2,
0.2,  0.3,
0.21, 0.31,
0.18, 0.28,
0.3,  0.3,
0.35, 0.35,
0.10, 0.20,
0.07, 0.17), ncol = 2, byrow = T)
# scenarios = matrix(c(0.2, 0.2), ncol = 2)
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.900, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
scenarios = matrix(c(0.2, 0.2), ncol = 2)
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.929, 0.900, 0.901, 0.895, 0.902),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.932, 0.904, 0.905, 0.905, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
scenarios = matrix(c(0.2, 0.2), ncol = 2)
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.934, 0.914, 0.915, 0.911, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.936, 0.916, 0.916, 0.914, 0.913),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.937, 0.917, 0.917, 0.913, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.940, 0.920, 0.919, 0.915, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.939, 0.922, 0.918, 0.914, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.939, 0.922, 0.917, 0.914, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
theta.h
##-------------------------------
## Case 3: theta_h = 0.2
##-------------------------------
theta.h = 0.2
scenarios = matrix(c(0.2,  0.2,
0.2,  0.3,
0.21, 0.31,
0.18, 0.28,
0.3,  0.3,
0.35, 0.35,
0.10, 0.20,
0.07, 0.17), ncol = 2, byrow = T)
# scenarios = matrix(c(0.2, 0.2), ncol = 2)
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.939, 0.922, 0.917, 0.914, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
res_3 <- cbind(scenarios,res_3)
write.csv(res_3, file = 'Res_supp/res_binary_OC_case_3.csv')
scenarios = matrix(c(0.07, 0.17), ncol = 2)
set.seed(222)
res_3 <- sim_OC(i = 3, theta.h = theta.h, scenarios = scenarios,
cutoff = c(0.939, 0.922, 0.917, 0.914, 0.912),
n_t = n_t, n_c = n_c, n_h = n_h, delta = delta, ntrial = 2e3, nsim = 1e4)
res_3
## True effect size
theta_c <- c(seq(-6,-3, length.out = 5),
seq(-3, 3, by = 0.05),
seq( 3, 6, length.out = 5))
d = c(0.2, 0.5, 0.8)
ymin_bias = c(-0.2, -0.3, -0.35)
ymax_bias = c(0.2, 0.3, 0.35)
ymin_rmse = c(-0.04, -0.2, -0.3)
ymax_rmse = c(0.15, 0.7, 1)
Continue_Bias <- c()
Continue_RMSE <- c()
Methods <- c('', 'SAM', 'Mix50', 'Mix90')
for(i in 1:3){
load(paste0('Res_supp/SAM_Bias_RMSE_continue_eff_', d[i], '_.RData'))
for(j in 2:6){
Continue_Bias <- rbind(Continue_Bias, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_bias[,j]), Methods[j]), d[i]), ymin_bias[i]), ymax_bias[i]))
Continue_RMSE <- rbind(Continue_RMSE, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_RMSE[,j]), Methods[j]), d[i]), ymin_rmse[i]), ymax_rmse[i]))
}
}
i
Methods <- c('', 'SAM', 'Mix50', 'Mix90')
for(i in 1:3){
load(paste0('Res_supp/SAM_Bias_RMSE_continue_eff_', d[i], '_131_.RData'))
for(j in 2:5){
Continue_Bias <- rbind(Continue_Bias, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_bias[,j]), Methods[j]), d[i]), ymin_bias[i]), ymax_bias[i]))
Continue_RMSE <- rbind(Continue_RMSE, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_RMSE[,j]), Methods[j]), d[i]), ymin_rmse[i]), ymax_rmse[i]))
}
}
for(i in 1:3){
Indx <- c(which(as.numeric(Continue_RMSE[,2]) > ymax_rmse[i] & as.numeric(Continue_RMSE[,4]) == d[i]),
which(as.numeric(Continue_RMSE[,2]) < ymin_rmse[i] & as.numeric(Continue_RMSE[,4]) == d[i]))
Continue_RMSE <- Continue_RMSE[-Indx, ]
}
colnames(Continue_Bias) <- c('prob_c', 'Bias', 'Methods', 'prob_h', 'ymin', 'ymax')
colnames(Continue_RMSE) <- c('prob_c', 'RMSE', 'Methods', 'prob_h', 'ymin', 'ymax')
## Remove iSAM
Continue_Bias <- Continue_Bias[-which(Continue_Bias[,'Methods'] == 'iSAM'), ]
Continue_RMSE <- Continue_RMSE[-which(Continue_RMSE[,'Methods'] == 'iSAM'), ]
## Making to dataframe
Continue_Bias <- as.data.frame(Continue_Bias)
Continue_RMSE <- as.data.frame(Continue_RMSE)
Continue_Bias$prob_c  <- as.numeric(Continue_Bias$prob_c)
Continue_Bias$Bias    <- as.numeric(Continue_Bias$Bias)
Continue_Bias$Methods <- as.factor(Continue_Bias$Methods)
Continue_Bias$prob_h  <- factor(Continue_Bias$prob_h, levels = c(0.2, 0.5, 0.8))
Continue_Bias$ymin    <- as.numeric(Continue_Bias$ymin)
Continue_Bias$ymax    <- as.numeric(Continue_Bias$ymax)
Continue_RMSE$prob_c  <- as.numeric(Continue_RMSE$prob_c)
Continue_RMSE$RMSE    <- as.numeric(Continue_RMSE$RMSE)
Continue_RMSE$Methods <- as.factor(Continue_RMSE$Methods)
Continue_RMSE$prob_h  <- factor(Continue_RMSE$prob_h, levels = c(0.2, 0.5, 0.8))
Continue_RMSE$ymin    <- as.numeric(Continue_RMSE$ymin)
Continue_RMSE$ymax    <- as.numeric(Continue_RMSE$ymax)
Continue_Bias <- c()
Continue_RMSE <- c()
Methods <- c('', 'SAM', 'Mix50', 'Mix90')
for(i in 1:3){
load(paste0('Res_supp/SAM_Bias_RMSE_continue_eff_', d[i], '_131_.RData'))
for(j in 2:5){
Continue_Bias <- rbind(Continue_Bias, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_bias[,j]), Methods[j]), d[i]), ymin_bias[i]), ymax_bias[i]))
Continue_RMSE <- rbind(Continue_RMSE, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_RMSE[,j]), Methods[j]), d[i]), ymin_rmse[i]), ymax_rmse[i]))
}
}
for(i in 1:3){
Indx <- c(which(as.numeric(Continue_RMSE[,2]) > ymax_rmse[i] & as.numeric(Continue_RMSE[,4]) == d[i]),
which(as.numeric(Continue_RMSE[,2]) < ymin_rmse[i] & as.numeric(Continue_RMSE[,4]) == d[i]))
Continue_RMSE <- Continue_RMSE[-Indx, ]
}
colnames(Continue_Bias) <- c('prob_c', 'Bias', 'Methods', 'prob_h', 'ymin', 'ymax')
colnames(Continue_RMSE) <- c('prob_c', 'RMSE', 'Methods', 'prob_h', 'ymin', 'ymax')
## Making to dataframe
Continue_Bias <- as.data.frame(Continue_Bias)
Continue_RMSE <- as.data.frame(Continue_RMSE)
Continue_Bias$prob_c  <- as.numeric(Continue_Bias$prob_c)
Continue_Bias$Bias    <- as.numeric(Continue_Bias$Bias)
Continue_Bias$Methods <- as.factor(Continue_Bias$Methods)
Continue_Bias$prob_h  <- factor(Continue_Bias$prob_h, levels = c(0.2, 0.5, 0.8))
Continue_Bias$ymin    <- as.numeric(Continue_Bias$ymin)
Continue_Bias$ymax    <- as.numeric(Continue_Bias$ymax)
Continue_RMSE$prob_c  <- as.numeric(Continue_RMSE$prob_c)
Continue_RMSE$RMSE    <- as.numeric(Continue_RMSE$RMSE)
Continue_RMSE$Methods <- as.factor(Continue_RMSE$Methods)
Continue_RMSE$prob_h  <- factor(Continue_RMSE$prob_h, levels = c(0.2, 0.5, 0.8))
Continue_RMSE$ymin    <- as.numeric(Continue_RMSE$ymin)
Continue_RMSE$ymax    <- as.numeric(Continue_RMSE$ymax)
appender <- function(string) TeX(paste("$\\d = $", string))
## Making the bias plot for binary data
pt_bias_continue <- ggplot(Continue_Bias, aes(x = prob_c, y = Bias, color = Methods)) +
geom_line() + facet_wrap(~ prob_h, scales = "free",
labeller = as_labeller(appender,
default = label_parsed)) +
geom_hline(yintercept = 0, lty = 2,
color = 'black') +
geom_vline(xintercept = 0, lty = 2,color = 'black') +
scale_y_continuous(limits = c(-0.35, 0.35)) +
scale_x_continuous(limits = c(-6, 6)) +
ggtitle("(A) Relative bias") +
xlab(expression(theta)) + ylab("Relative Bias")  +
theme_classic() +
theme(legend.position="bottom",
plot.title = element_text(hjust = 0.5, # face = 'bold',
vjust = -7),
panel.border = element_rect(fill = 'transparent'),
strip.placement = "inside",
strip.clip = 'off',
strip.text.x.top = element_text(hjust = 1, vjust = -10,
face = 'bold', size = 12),
strip.background = element_blank(),
axis.line = element_line(colour = "black", size = 0.1)
)
pt_bias_continue
## Making the RMSE plot for continue data
pt_RMSE_continue <- ggplot(Continue_RMSE, aes(x = prob_c, y = RMSE, color = Methods)) +
geom_line() + facet_wrap(~ prob_h, scales = "free",
labeller = as_labeller(appender,
default = label_parsed)) +
geom_hline(yintercept = 0, lty = 2,
color = 'black') +
geom_vline(xintercept = 0, lty = 2,
color = 'black') +
# scale_y_continuous(limits = c(-0.3, 1)) +
scale_x_continuous(limits = c(-6, 6)) +
ggtitle("(B) Relative MSE") +
xlab(expression(theta)) + ylab("Relative MSE")  +
theme_classic() +
theme(legend.position="bottom",
plot.title = element_text(hjust = 0.5, # face = 'bold',
vjust = -7),
panel.border = element_rect(fill = 'transparent'),
strip.placement = "inside",
strip.clip = 'off',
strip.text.x.top = element_text(hjust = 1, vjust = -10,
face = 'bold', size = 12),
strip.background = element_blank(),
axis.line = element_line(colour = "black", size = 0.1)
)
pt_RMSE_continue
## True effect size
theta_c <- c(seq(-6,-3, length.out = 5),
seq(-3, 3, by = 0.05),
seq( 3, 6, length.out = 5))
d = c(0.2, 0.5, 0.8)
ymin_bias = c(-0.2, -0.3, -0.35)
ymax_bias = c(0.2, 0.3, 0.35)
ymin_rmse = c(-0.04, -0.2, -0.3)
ymax_rmse = c(0.15, 0.7, 1)
Continue_Bias <- c()
Continue_RMSE <- c()
Methods <- c(' ', 'SAM 7:3', 'SAM 9:1', 'Mix70', 'Mix90')
for(i in 1:3){
load(paste0('Res_supp/SAM_Bias_RMSE_continue_eff_', d[i], '_131_.RData'))
for(j in 2:5){
Continue_Bias <- rbind(Continue_Bias, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_bias[,j]), Methods[j]), d[i]), ymin_bias[i]), ymax_bias[i]))
Continue_RMSE <- rbind(Continue_RMSE, cbind(cbind(cbind(cbind(cbind(theta_c + 1*as.numeric(i == 2), post_theta_RMSE[,j]), Methods[j]), d[i]), ymin_rmse[i]), ymax_rmse[i]))
}
}
for(i in 1:3){
Indx <- c(which(as.numeric(Continue_RMSE[,2]) > ymax_rmse[i] & as.numeric(Continue_RMSE[,4]) == d[i]),
which(as.numeric(Continue_RMSE[,2]) < ymin_rmse[i] & as.numeric(Continue_RMSE[,4]) == d[i]))
Continue_RMSE <- Continue_RMSE[-Indx, ]
}
colnames(Continue_Bias) <- c('prob_c', 'Bias', 'Methods', 'prob_h', 'ymin', 'ymax')
colnames(Continue_RMSE) <- c('prob_c', 'RMSE', 'Methods', 'prob_h', 'ymin', 'ymax')
## Making to dataframe
Continue_Bias <- as.data.frame(Continue_Bias)
Continue_RMSE <- as.data.frame(Continue_RMSE)
Continue_Bias$prob_c  <- as.numeric(Continue_Bias$prob_c)
Continue_Bias$Bias    <- as.numeric(Continue_Bias$Bias)
Continue_Bias$Methods <- as.factor(Continue_Bias$Methods)
Continue_Bias$prob_h  <- factor(Continue_Bias$prob_h, levels = c(0.2, 0.5, 0.8))
Continue_Bias$ymin    <- as.numeric(Continue_Bias$ymin)
Continue_Bias$ymax    <- as.numeric(Continue_Bias$ymax)
Continue_RMSE$prob_c  <- as.numeric(Continue_RMSE$prob_c)
Continue_RMSE$RMSE    <- as.numeric(Continue_RMSE$RMSE)
Continue_RMSE$Methods <- as.factor(Continue_RMSE$Methods)
Continue_RMSE$prob_h  <- factor(Continue_RMSE$prob_h, levels = c(0.2, 0.5, 0.8))
Continue_RMSE$ymin    <- as.numeric(Continue_RMSE$ymin)
Continue_RMSE$ymax    <- as.numeric(Continue_RMSE$ymax)
appender <- function(string) TeX(paste("$\\d = $", string))
## Making the bias plot for binary data
pt_bias_continue <- ggplot(Continue_Bias, aes(x = prob_c, y = Bias, color = Methods)) +
geom_line() + facet_wrap(~ prob_h, scales = "free",
labeller = as_labeller(appender,
default = label_parsed)) +
geom_hline(yintercept = 0, lty = 2,
color = 'black') +
geom_vline(xintercept = 0, lty = 2,color = 'black') +
scale_y_continuous(limits = c(-0.35, 0.35)) +
scale_x_continuous(limits = c(-6, 6)) +
ggtitle("(A) Relative bias") +
xlab(expression(theta)) + ylab("Relative Bias")  +
theme_classic() +
theme(legend.position="bottom",
plot.title = element_text(hjust = 0.5, # face = 'bold',
vjust = -7),
panel.border = element_rect(fill = 'transparent'),
strip.placement = "inside",
strip.clip = 'off',
strip.text.x.top = element_text(hjust = 1, vjust = -10,
face = 'bold', size = 12),
strip.background = element_blank(),
axis.line = element_line(colour = "black", size = 0.1)
)
pt_bias_continue
## Making the bias plot for binary data
pt_bias_continue <- ggplot(Continue_Bias, aes(x = prob_c, y = Bias, color = Methods)) +
geom_line() + facet_wrap(~ prob_h, scales = "free",
labeller = as_labeller(appender,
default = label_parsed)) +
geom_hline(yintercept = 0, lty = 2,
color = 'black') +
geom_vline(xintercept = 0, lty = 2,color = 'black') +
scale_y_continuous(limits = c(-0.5, 0.5)) +
scale_x_continuous(limits = c(-6, 6)) +
ggtitle("(A) Relative bias") +
xlab(expression(theta)) + ylab("Relative Bias")  +
theme_classic() +
theme(legend.position="bottom",
plot.title = element_text(hjust = 0.5, # face = 'bold',
vjust = -7),
panel.border = element_rect(fill = 'transparent'),
strip.placement = "inside",
strip.clip = 'off',
strip.text.x.top = element_text(hjust = 1, vjust = -10,
face = 'bold', size = 12),
strip.background = element_blank(),
axis.line = element_line(colour = "black", size = 0.1)
)
pt_bias_continue
## Making the bias plot for binary data
pt_bias_continue <- ggplot(Continue_Bias, aes(x = prob_c, y = Bias, color = Methods)) +
geom_line() + facet_wrap(~ prob_h, scales = "free",
labeller = as_labeller(appender,
default = label_parsed)) +
geom_hline(yintercept = 0, lty = 2,
color = 'black') +
geom_vline(xintercept = 0, lty = 2,color = 'black') +
# scale_y_continuous(limits = c(-0.5, 0.5)) +
scale_x_continuous(limits = c(-6, 6)) +
ggtitle("(A) Relative bias") +
xlab(expression(theta)) + ylab("Relative Bias")  +
theme_classic() +
theme(legend.position="bottom",
plot.title = element_text(hjust = 0.5, # face = 'bold',
vjust = -7),
panel.border = element_rect(fill = 'transparent'),
strip.placement = "inside",
strip.clip = 'off',
strip.text.x.top = element_text(hjust = 1, vjust = -10,
face = 'bold', size = 12),
strip.background = element_blank(),
axis.line = element_line(colour = "black", size = 0.1)
)
pt_bias_continue
## Making the RMSE plot for continue data
pt_RMSE_continue <- ggplot(Continue_RMSE, aes(x = prob_c, y = RMSE, color = Methods)) +
geom_line() + facet_wrap(~ prob_h, scales = "free",
labeller = as_labeller(appender,
default = label_parsed)) +
geom_hline(yintercept = 0, lty = 2,
color = 'black') +
geom_vline(xintercept = 0, lty = 2,
color = 'black') +
# scale_y_continuous(limits = c(-0.3, 1)) +
scale_x_continuous(limits = c(-6, 6)) +
ggtitle("(B) Relative MSE") +
xlab(expression(theta)) + ylab("Relative MSE")  +
theme_classic() +
theme(legend.position="bottom",
plot.title = element_text(hjust = 0.5, # face = 'bold',
vjust = -7),
panel.border = element_rect(fill = 'transparent'),
strip.placement = "inside",
strip.clip = 'off',
strip.text.x.top = element_text(hjust = 1, vjust = -10,
face = 'bold', size = 12),
strip.background = element_blank(),
axis.line = element_line(colour = "black", size = 0.1)
)
pt_RMSE_continue
Fig_BR_continue <- plot_grid(plotlist = list(pt_bias_continue + guides(color = FALSE),
pt_RMSE_continue),
nrow = 2, rel_heights = c(0.8, 1))
pdf('Figures/Fig_BR_continue_supp.pdf', height = 6, width = 8)
print(Fig_BR_continue)
dev.off()
setwd("~/Box Sync/SAM-prior")
## True probability
prob_h <- c(0.4, 0.3, 0.2)
prob_c <- seq(0.01, 0.99, by = 0.01)
n_c   <- c(150, 150, 125)
n_t   <- c(300, 300, 250)
n_h   <- c(300, 300, 250)
## True probability
prob_h <- c(0.4, 0.3, 0.2)
prob_c <- seq(0.01, 0.99, by = 0.01)
n_c   <- c(150, 150, 125)
n_t   <- c(300, 300, 250)
n_h   <- c(300, 300, 250)
a = b = 1
setwd("~/Box Sync/GitHub/SAMprior")
usethis::use_version('major')
usethis::use_version('major')
usethis::use_version('major')
devtools::submit_cran()
library(SAMprior)
?get_OC
usethis::use_version('major')
usethis::use_version('major')
devtools::submit_cran()
?person
devtools::build_manual()
update.packages('orxygen2')
library(orxygen2)
update.packages('roxygen2')
library(roxygen2)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
??person
person("Karl", "Pearson", email = "pearson@stats.heaven")
(person("Peng", "Yang", "Developer", email = "py11@rice.edu",
role = c("aut", "cre"),
comment = c(ORCID = "0000-0002-0630-9506")))
?person
person(given = "Peng", family = "Yang", email = "py11@rice.edu",
role = c("aut", "cre"),
comment = c(ORCID = "0000-0002-0630-9506"))
person(given = "Ying", family = "Yuan", email = "yyuan@mdanderson.org",
role = "aut",
comment = c(ORCID = "0000-0003-3163-480X")))
person(given = "Ying", family = "Yuan", email = "yyuan@mdanderson.org",
role = "aut",
comment = c(ORCID = "0000-0003-3163-480X"))
devtools::build_manual()
usethis::use_version('major')
devtools::submit_cran()
usethis::use_version('major')
devtools::submit_cran()
devtools::build_manual()
devtools::build_manual()
usethis::use_version('major')
devtools::submit_cran()
usethis::use_version('major')
devtools::submit_cran()
library(SAMprior)
load("~/Box Sync/GitHub/SAMprior/.RData")
sd(c(1))
library(SAMprior)
devtools::build()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(SAMprior)
devtools::build_manual()
library(SAMprior)
library(SAMprior)
library(SAMprior)
devtools::build_vignettes()
usethis::use_version('major')
?usethis::use_version()
usethis::use_version('minor')
devtools::submit_cran()
SAMprior::SAM_weight(if.prior = mixbeta(c(1,1,1)), theta.h = 0.1, delta = 0.2, n = 100, r = 10)
library(SAMprior)
SAMprior::SAM_weight(if.prior = mixbeta(c(1,1,1)), theta.h = 0.1, delta = 0.2, n = 100, r = 10)
SAMprior::SAM_weight(if.prior = mixbeta(c(1,1,1)), theta.h = 0.9, delta = 0.2, n = 100, r = 10)
SAMprior::SAM_weight(if.prior = mixbeta(c(1,1,1)), theta.h = 0.9, delta = 0.2, n = 100, r = 1)
SAMprior::SAM_weight(if.prior = mixbeta(c(1,1,1)), theta.h = 0.1, delta = 0.2, n = 100, r = 1)
usethis::use_news_md()
library(SAMprior)
?SAM_prior
usethis::use_version()
?usethis::use_version()
?usethis::use_version('patch')
?usethis::use_version('minor')
usethis::use_version('patch')
devtools::submit_cran()
